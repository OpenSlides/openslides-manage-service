---
# Name of the generated YAML file.
filename: docker-compose.yml

# The OpenSlides proxy service listens on this address.
host: 127.0.0.1
port: 8000

# General global options
disablePostgres: false
disableDependsOn: false
enableLocalHTTPS: true
enableAutoHTTPS: false

# Defaults for all OpenSlides services.
defaults:
  containerRegistry: ghcr.io/openslides/openslides
  tag: latest

# These environment variables are injected into every OpenSlides service
# via YAML merge type (https://yaml.org/type/merge.html).
defaultEnvironment:
  ACTION_HOST: backendAction
  ACTION_PORT: 9002
  PRESENTER_HOST: backendPresenter
  PRESENTER_PORT: 9003

  DATASTORE_READER_HOST: datastoreReader
  DATASTORE_READER_PORT: 9010
  DATASTORE_WRITER_HOST: datastoreWriter
  DATASTORE_WRITER_PORT: 9011

  AUTOUPDATE_HOST: autoupdate
  AUTOUPDATE_PORT: 9012

  AUTH_HOST: auth
  AUTH_PORT: 9004

  VOTE_HOST: vote
  VOTE_PORT: 9013

  CACHE_HOST: redis
  CACHE_PORT: 6379
  MESSAGE_BUS_HOST: redis
  MESSAGE_BUS_PORT: 6379

  MEDIA_HOST: media
  MEDIA_PORT: 9006

  ICC_HOST: icc
  ICC_PORT: 9007

  MANAGE_HOST: manage
  MANAGE_PORT: 9008

  DATABASE_HOST: postgres
  DATABASE_PORT: 5432
  DATABASE_NAME: openslides
  DATABASE_USER: openslides
  DATABASE_PASSWORD_FILE: /run/secrets/postgres_password
  MEDIA_DATABASE_HOST: postgres
  MEDIA_DATABASE_PORT: 5432
  MEDIA_DATABASE_NAME: openslides
  MEDIA_DATABASE_USER: openslides
  MEDIA_DATABASE_PASSWORD_FILE: /run/secrets/postgres_password
  VOTE_DATABASE_HOST: postgres
  VOTE_DATABASE_PORT: 5432
  VOTE_DATABASE_NAME: openslides
  VOTE_DATABASE_USER: openslides
  VOTE_DATABASE_PASSWORD_FILE: /run/secrets/postgres_password

  INTERNAL_AUTH_PASSWORD_FILE: /run/secrets/internal_auth_password
  MANAGE_AUTH_PASSWORD_FILE: /run/secrets/manage_auth_password
  AUTH_TOKEN_KEY_FILE: /run/secrets/auth_token_key
  AUTH_COOKIE_KEY_FILE: /run/secrets/auth_cookie_key
  SUPERADMIN_PASSWORD_FILE: /run/secrets/superadmin

  OPENSLIDES_LOGLEVEL: info
  OPENSLIDES_DEVELOPMENT: "false"
  SYSTEM_URL: localhost:8000

# You can extend or replace parts of the defaultEnvironment.
#
# Example:
#
# defaultEnvironment:
#   SOME_ENV_VAR: my value

# You can customize single services using the services property.
services:
  datastoreReader:
    environment:
      NUM_WORKERS: 8
  manage:
    environment:
      ACTION_HOST: backendManage

# All properties from the "defaults" section are available here.
#
# Example:
#
# services:
#   datastoreReader:
#     tag: my-tag
#   autoupdate:
#     containerRegistry: example.com/my-registry

# You can also extend or replace parts of the environment.
#
# Example:
#
# services:
#   datastoreReader:
#     environment
#       NUM_WORKERS: 8

# You can also define some additional content for all services. This will just
# add the object to the respective service blob.
#
# Example:
#
# services:
#   autoupdate:
#     additionalContent:
#       deploy:
#         replicas: 4
